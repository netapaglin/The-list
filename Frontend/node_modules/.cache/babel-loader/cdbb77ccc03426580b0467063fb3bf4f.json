{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\Frontend\\\\src\\\\Components\\\\HomeArea\\\\PerDone\\\\PerDone.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./PerDone.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerDone(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  const tasks = useSelector(state => state.tasksState.tasks);\n  // const [lists, setLists] = useState([])\n\n  useEffect(() => {\n    tasksService.getTasksByList(id)\n    // . then(lists => setLists(lists))\n    .catch(err => alert(err.message));\n    console.log(lists);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PerDone\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(PerDone, \"rpid5XdznE5ROiVayhTdnNHvoIs=\", false, function () {\n  return [useSelector];\n});\n_c = PerDone;\nexport default PerDone;\nvar _c;\n$RefreshReg$(_c, \"PerDone\");","map":{"version":3,"names":["useEffect","useSelector","tasksService","PerDone","id","tasks","state","tasksState","getTasksByList","catch","err","alert","message","console","log","lists"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Components/HomeArea/PerDone/PerDone.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ListModel from \"../../../Models/ListModel\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport { RootState } from \"../../../Redux/Store\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./PerDone.css\";\n\nfunction PerDone({id}:{id:string}): JSX.Element {\n\n    const tasks = useSelector<RootState, TaskModel[]>(state => state.tasksState.tasks)\n    // const [lists, setLists] = useState([])\n    \n    useEffect(() => {\n        tasksService\n        .getTasksByList(id)\n        // . then(lists => setLists(lists))\n        .catch(err => alert(err.message));\n        console.log(lists)\n\n        }, []);\n\n \n\n    return (\n        <div className=\"PerDone\">\n           \n            <p>{id}</p>\n        </div>\n    );\n}\n\nexport default PerDone;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAkB,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAIzC,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAO,eAAe;AAAC;AAEvB,SAASC,OAAO,OAAgC;EAAA;EAAA,IAA/B;IAACC;EAAc,CAAC;EAE7B,MAAMC,KAAK,GAAGJ,WAAW,CAAyBK,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,KAAK,CAAC;EAClF;;EAEAL,SAAS,CAAC,MAAM;IACZE,YAAY,CACXM,cAAc,CAACJ,EAAE;IAClB;IAAA,CACCK,KAAK,CAACC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAElB,CAAC,EAAE,EAAE,CAAC;EAIV,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,uBAEpB;MAAA,UAAIX;IAAE;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACT;AAEd;AAAC,GAtBQD,OAAO;EAAA,QAEEF,WAAW;AAAA;AAAA,KAFpBE,OAAO;AAwBhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}