{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../Utils/Config\";\nclass ListsService {\n  // Get all lists: \n  async getAllLists() {\n    const response = await axios.get(config.listsUrl);\n    return response.data;\n  }\n\n  // Delete list: \n  async deleteLia(listId) {\n    await axios.delete(config.deletelistsUrl + listId);\n  }\n\n  // Add list: \n  async addList(list) {\n    const response = await axios.post(config.addListUrl, list);\n    return response.data;\n  }\n\n  // // Get all targets: \n  // public async getAllTargets(): Promise<TargetModel[]> {\n  //     const response = await axios.get<TargetModel[]>(config.targetsUrl);\n  //     return response.data;\n  // }\n\n  // // Get gifts by target id: \n  // public async getGiftsByTarget(targetId: number): Promise<GiftModel[]> {\n  //     const response = await axios.get<GiftModel[]>(config.giftsByTargetUrl + targetId);\n  //     return response.data;\n  // }\n\n  // // Add gift: \n  // public async addGift(gift: GiftModel): Promise<GiftModel> {\n  //     const response = await axios.post<GiftModel>(config.giftsUrl, gift);\n  //     return response.data;\n  // }\n}\n\nconst listsService = new ListsService();\nexport default listsService;","map":{"version":3,"names":["axios","config","ListsService","getAllLists","response","get","listsUrl","data","deleteLia","listId","delete","deletelistsUrl","addList","list","post","addListUrl","listsService"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Services/list-service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport ListModel from \"../Models/ListModel\";\r\nimport config from \"../Utils/Config\";\r\n\r\nclass ListsService {\r\n\r\n    // Get all lists: \r\n    public async getAllLists(): Promise<ListModel[]> {\r\n        const response = await axios.get<ListModel[]>(config.listsUrl);\r\n        return response.data;\r\n    }\r\n\r\n     // Delete list: \r\n     public async deleteLia(listId: string): Promise<void> {\r\n     await axios.delete(config.deletelistsUrl + listId);\r\n    }\r\n\r\n       // Add list: \r\n    public async addList(list: ListModel): Promise<ListModel> {\r\n        const response = await axios.post<ListModel>(config.addListUrl, list);\r\n        return response.data;\r\n    }\r\n\r\n\r\n    // // Get all targets: \r\n    // public async getAllTargets(): Promise<TargetModel[]> {\r\n    //     const response = await axios.get<TargetModel[]>(config.targetsUrl);\r\n    //     return response.data;\r\n    // }\r\n\r\n    // // Get gifts by target id: \r\n    // public async getGiftsByTarget(targetId: number): Promise<GiftModel[]> {\r\n    //     const response = await axios.get<GiftModel[]>(config.giftsByTargetUrl + targetId);\r\n    //     return response.data;\r\n    // }\r\n\r\n    // // Add gift: \r\n    // public async addGift(gift: GiftModel): Promise<GiftModel> {\r\n    //     const response = await axios.post<GiftModel>(config.giftsUrl, gift);\r\n    //     return response.data;\r\n    // }\r\n}\r\n\r\nconst listsService = new ListsService()\r\nexport default listsService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,YAAY,CAAC;EAEf;EACA,MAAaC,WAAW,GAAyB;IAC7C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAcJ,MAAM,CAACK,QAAQ,CAAC;IAC9D,OAAOF,QAAQ,CAACG,IAAI;EACxB;;EAEC;EACA,MAAaC,SAAS,CAACC,MAAc,EAAiB;IACtD,MAAMT,KAAK,CAACU,MAAM,CAACT,MAAM,CAACU,cAAc,GAAGF,MAAM,CAAC;EACnD;;EAEG;EACH,MAAaG,OAAO,CAACC,IAAe,EAAsB;IACtD,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACc,IAAI,CAAYb,MAAM,CAACc,UAAU,EAAEF,IAAI,CAAC;IACrE,OAAOT,QAAQ,CAACG,IAAI;EACxB;;EAGA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;AACJ;;AAEA,MAAMS,YAAY,GAAG,IAAId,YAAY,EAAE;AACvC,eAAec,YAAY"},"metadata":{},"sourceType":"module"}