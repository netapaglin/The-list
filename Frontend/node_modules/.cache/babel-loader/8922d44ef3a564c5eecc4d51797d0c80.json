{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\Frontend\\\\src\\\\Components\\\\HomeArea\\\\PerDone\\\\PerDone.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./PerDone.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerDone(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  // const tasks = useSelector<RootState, TaskModel[]>(state => state.tasksState.tasks)\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    tasksService.getTasksByList(id).then(tasks => setTasks(tasks)).catch(err => alert(err.message));\n  }, []);\n  const percentDone = () => {\n    let count = 0;\n    for (let i = 0; i <= tasks.length; i++) {\n      if (tasks[i].done === true) {\n        count++;\n      }\n    }\n    const percent = count / tasks.length;\n    console.log(percent);\n    return percent;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PerDone\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: percentDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(PerDone, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = PerDone;\nexport default PerDone;\nvar _c;\n$RefreshReg$(_c, \"PerDone\");","map":{"version":3,"names":["useEffect","useState","tasksService","PerDone","id","tasks","setTasks","getTasksByList","then","catch","err","alert","message","percentDone","count","i","length","done","percent","console","log"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Components/HomeArea/PerDone/PerDone.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ListModel from \"../../../Models/ListModel\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport { RootState } from \"../../../Redux/Store\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./PerDone.css\";\n\nfunction PerDone({ id }: { id: string }): JSX.Element {\n\n    // const tasks = useSelector<RootState, TaskModel[]>(state => state.tasksState.tasks)\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n        tasksService\n            .getTasksByList(id)\n            .then(tasks => setTasks(tasks))\n            .catch(err => alert(err.message));\n       \n    }, []);\n\n    const percentDone = () =>{\n        let count = 0\n        for (let i =0 ; i<= tasks.length; i++){\n            if (tasks[i].done === true){\n                count ++\n            }\n        }\n        const percent = count/tasks.length\n        console.log(percent)\n        return percent\n    }\n\n    return (\n        <div className=\"PerDone\">\n\n            <p>{id}</p>\n            <p>{percentDone}</p>\n        </div>\n    );\n}\n\nexport default PerDone;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAK3C,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAO,eAAe;AAAC;AAEvB,SAASC,OAAO,OAAsC;EAAA;EAAA,IAArC;IAAEC;EAAmB,CAAC;EAEnC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZE,YAAY,CACPK,cAAc,CAACH,EAAE,CAAC,CAClBI,IAAI,CAACH,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAC9BI,KAAK,CAACC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC,CAAC;EAEzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAG,MAAK;IACrB,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,IAAIC,CAAC,GAAE,CAAC,EAAGA,CAAC,IAAGV,KAAK,CAACW,MAAM,EAAED,CAAC,EAAE,EAAC;MAClC,IAAIV,KAAK,CAACU,CAAC,CAAC,CAACE,IAAI,KAAK,IAAI,EAAC;QACvBH,KAAK,EAAG;MACZ;IACJ;IACA,MAAMI,OAAO,GAAGJ,KAAK,GAACT,KAAK,CAACW,MAAM;IAClCG,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,OAAOA,OAAO;EAClB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBAEpB;MAAA,UAAId;IAAE;MAAA;MAAA;MAAA;IAAA,QAAK,eACX;MAAA,UAAIS;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAClB;AAEd;AAAC,GAhCQV,OAAO;AAAA,KAAPA,OAAO;AAkChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}