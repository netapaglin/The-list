{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\Frontend\\\\src\\\\Components\\\\HomeArea\\\\PerDone\\\\PerDone.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./PerDone.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerDone(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  console.log(id);\n  const [tasks, setTasks] = useState([]);\n  const [perc, setPerc] = useState(Number);\n\n  // useEffect(() => {\n  //     tasksService\n  //         .getTasksByList(id)\n  //         .then(tasks => setTasks(tasks))\n  //         .catch(err => alert(err.message));\n  //     console.log(tasks)\n  //     let count = 0\n  //     for (let i = 0; i < tasks.length; i++) {\n  //         if (tasks[i].done === true) {\n  //             count++\n  //         }\n  //     }\n  //     let percent = count / tasks.length\n  //     setPerc(percent)\n\n  //     console.log(percent)\n  // }, []);\n\n  useEffect(() => {\n    tasksService.getTasksByList(id).then(tasks => setTasks(tasks)).catch(err => alert(err.message));\n    console.log(tasks);\n  }, []);\n  useEffect(() => {\n    let count = 0;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].done === true) {\n        count++;\n      }\n    }\n    let percent = toFixed();\n    setPerc(percent);\n    console.log(percent);\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PerDone\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: perc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Done\",\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(PerDone, \"4ek/myltxSHTZSxzs+DuKUCQGq0=\");\n_c = PerDone;\nexport default PerDone;\nvar _c;\n$RefreshReg$(_c, \"PerDone\");","map":{"version":3,"names":["useEffect","useState","tasksService","PerDone","id","console","log","tasks","setTasks","perc","setPerc","Number","getTasksByList","then","catch","err","alert","message","count","i","length","done","percent","toFixed"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Components/HomeArea/PerDone/PerDone.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ListModel from \"../../../Models/ListModel\";\nimport TaskModel from \"../../../Models/TaskModel\";\n\nimport tasksService from \"../../../Services/task-service\";\nimport \"./PerDone.css\";\n\nfunction PerDone({ id }: { id: string }): JSX.Element {\n    console.log(id)\n\n    const [tasks, setTasks] = useState([])\n    const [perc, setPerc] = useState(Number)\n\n    // useEffect(() => {\n    //     tasksService\n    //         .getTasksByList(id)\n    //         .then(tasks => setTasks(tasks))\n    //         .catch(err => alert(err.message));\n    //     console.log(tasks)\n    //     let count = 0\n    //     for (let i = 0; i < tasks.length; i++) {\n    //         if (tasks[i].done === true) {\n    //             count++\n    //         }\n    //     }\n    //     let percent = count / tasks.length\n    //     setPerc(percent)\n\n    //     console.log(percent)\n    // }, []);\n\n    useEffect(() => {\n        tasksService\n            .getTasksByList(id)\n            .then(tasks => setTasks(tasks))\n            .catch(err => alert(err.message));\n        console.log(tasks)\n     \n    }, []);\n\n    useEffect(() => {\n    \n        let count = 0\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].done === true) {\n                count++\n            }\n        }\n        let percent =  toFixed()\n        setPerc(percent)\n\n        console.log(percent)\n    }, [tasks]);\n\n    return (\n        <div className=\"PerDone\">\n\n            <p>{perc}</p>\n\n            <p className=\"Done\">done</p>\n\n        </div>\n    );\n}\n\nexport default PerDone;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAK3C,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAO,eAAe;AAAC;AAEvB,SAASC,OAAO,OAAsC;EAAA;EAAA,IAArC;IAAEC;EAAmB,CAAC;EACnCC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAEf,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,MAAM,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEAX,SAAS,CAAC,MAAM;IACZE,YAAY,CACPU,cAAc,CAACR,EAAE,CAAC,CAClBS,IAAI,CAACN,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAC9BO,KAAK,CAACC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC,CAAC;IACrCZ,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAEtB,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IAEZ,IAAIkB,KAAK,GAAG,CAAC;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAIZ,KAAK,CAACY,CAAC,CAAC,CAACE,IAAI,KAAK,IAAI,EAAE;QACxBH,KAAK,EAAE;MACX;IACJ;IACA,IAAII,OAAO,GAAIC,OAAO,EAAE;IACxBb,OAAO,CAACY,OAAO,CAAC;IAEhBjB,OAAO,CAACC,GAAG,CAACgB,OAAO,CAAC;EACxB,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBAEpB;MAAA,UAAIE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eAEb;MAAG,SAAS,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAE1B;AAEd;AAAC,GAxDQN,OAAO;AAAA,KAAPA,OAAO;AA0DhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}