{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\Frontend\\\\src\\\\Components\\\\AddArea\\\\addTask\\\\addTask.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport taskService from \"../../../Services/task-service\";\nimport \"./addTask.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTask() {\n  _s();\n  var _formState$errors, _formState$errors$des;\n  const {\n    listId\n  } = useParams();\n  const {\n    listName\n  } = useParams();\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const navigate = useNavigate();\n  async function submit(task) {\n    try {\n      console.log(\"task\");\n      console.log(task);\n      const addedTask = await taskService.addTask(task, listId);\n      alert(\"task added \" + addedTask.description);\n      navigate(`/tasks/${listId}/${listName}`);\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addTask\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: listId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submit),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Write task: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"description\", {\n          required: {\n            value: true,\n            message: \"Missing task\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$des = _formState$errors.description) === null || _formState$errors$des === void 0 ? void 0 : _formState$errors$des.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(AddTask, \"gIRRPAgihEG3V4dDCKjC8JhJXPA=\", false, function () {\n  return [useParams, useParams, useForm, useNavigate];\n});\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useForm","useNavigate","useParams","taskService","AddTask","listId","listName","register","handleSubmit","formState","navigate","submit","task","console","log","addedTask","addTask","alert","description","err","message","required","value","errors"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Components/AddArea/addTask/addTask.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport taskService from \"../../../Services/task-service\";\nimport \"./addTask.css\";\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextField from '@mui/material/TextField';\n\nfunction AddTask(): JSX.Element {\n\n    const { listId } = useParams()\n    const { listName } = useParams()\n    const { register, handleSubmit, formState } = useForm<TaskModel>();\n    const navigate = useNavigate();\n\n    async function submit(task: TaskModel) {\n        try {\n            console.log(\"task\")\n            console.log(task)\n            const addedTask = await taskService.addTask(task,listId )\n            alert(\"task added \" + addedTask.description);\n            navigate(`/tasks/${listId}/${listName}`)\n            \n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n    }\n\n    return (\n        <div className=\"addTask\">\n            <p>add task</p>\n            <p>{listId}</p>\n\n            <form onSubmit={handleSubmit(submit)} noValidate>\n\n\n                <label>Write task: </label>\n                <input type=\"text\" {...register(\"description\", {\n                    required: { value: true, message: \"Missing task\" }\n                })} />\n                <span>{formState.errors?.description?.message}</span>\n\n                <button>Add</button>\n\n            </form>\n\n\n        </div>\n    );\n}\n\nexport default AddTask;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAEzD,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAO,eAAe;AAAC;AAMvB,SAASC,OAAO,GAAgB;EAAA;EAAA;EAE5B,MAAM;IAAEC;EAAO,CAAC,GAAGH,SAAS,EAAE;EAC9B,MAAM;IAAEI;EAAS,CAAC,GAAGJ,SAAS,EAAE;EAChC,MAAM;IAAEK,QAAQ;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGT,OAAO,EAAa;EAClE,MAAMU,QAAQ,GAAGT,WAAW,EAAE;EAE9B,eAAeU,MAAM,CAACC,IAAe,EAAE;IACnC,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,MAAMG,SAAS,GAAG,MAAMZ,WAAW,CAACa,OAAO,CAACJ,IAAI,EAACP,MAAM,CAAE;MACzDY,KAAK,CAAC,aAAa,GAAGF,SAAS,CAACG,WAAW,CAAC;MAC5CR,QAAQ,CAAE,UAASL,MAAO,IAAGC,QAAS,EAAC,CAAC;IAE5C,CAAC,CACD,OAAOa,GAAQ,EAAE;MACbF,KAAK,CAACE,GAAG,CAACC,OAAO,CAAC;IACtB;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACf;MAAA,UAAIf;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eAEf;MAAM,QAAQ,EAAEG,YAAY,CAACG,MAAM,CAAE;MAAC,UAAU;MAAA,wBAG5C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA2B,eAC3B;QAAO,IAAI,EAAC,MAAM;QAAA,GAAKJ,QAAQ,CAAC,aAAa,EAAE;UAC3Cc,QAAQ,EAAE;YAAEC,KAAK,EAAE,IAAI;YAAEF,OAAO,EAAE;UAAe;QACrD,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAI,eACN;QAAA,+BAAOX,SAAS,CAACc,MAAM,+EAAhB,kBAAkBL,WAAW,0DAA7B,sBAA+BE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ,eAErD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEjB;EAAA;IAAA;IAAA;IAAA;EAAA,QAGL;AAEd;AAAC,GA1CQhB,OAAO;EAAA,QAEOF,SAAS,EACPA,SAAS,EACgBF,OAAO,EACpCC,WAAW;AAAA;AAAA,KALvBG,OAAO;AA4ChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}