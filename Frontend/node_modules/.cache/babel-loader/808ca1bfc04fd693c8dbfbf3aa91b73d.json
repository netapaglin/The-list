{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\Frontend\\\\src\\\\Components\\\\AddArea\\\\addList\\\\addList.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport listsService from \"../../../Services/list-service\";\nimport \"./addList.css\";\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddList() {\n  _s();\n  var _formState$errors, _formState$errors$lis;\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const navigate = useNavigate();\n  async function submit(list) {\n    try {\n      const addedList = await listsService.addList(list);\n      alert(\"list added, id: \" + addedList.listName);\n      navigate(\"/home\");\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addList\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"Back\",\n      onClick: () => navigate(-1),\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 69\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(submit),\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"New list name\",\n          type: \"text\",\n          ...register(\"listName\", {\n            required: {\n              value: true,\n              message: \"Missing list name\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$lis = _formState$errors.listName) === null || _formState$errors$lis === void 0 ? void 0 : _formState$errors$lis.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"info\",\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(AddList, \"CFNJTGuHtuW8p7IAL8RVx7+bSLw=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = AddList;\nexport default AddList;\nvar _c;\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"names":["useForm","useNavigate","listsService","Button","IconButton","ArrowBackIcon","TextField","AddList","register","handleSubmit","formState","navigate","submit","list","addedList","addList","alert","listName","err","message","required","value","errors"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Components/AddArea/addList/addList.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport ListModel from \"../../../Models/ListModel\";\nimport listsService from \"../../../Services/list-service\";\nimport \"./addList.css\";\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextField from '@mui/material/TextField';\n\n\nfunction AddList(): JSX.Element {\n\n    const { register, handleSubmit, formState } = useForm<ListModel>();\n    const navigate = useNavigate();\n\n    async function submit(list: ListModel) {\n        try {\n            const addedList = await listsService.addList(list)\n            alert(\"list added, id: \" + addedList.listName);\n            navigate(\"/home\");\n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n    }\n\n    return (\n        <div className=\"addList\">\n\n            <IconButton className=\"Back\" onClick={()=>navigate(-1)}><ArrowBackIcon /></IconButton>\n            \n           \n            <form className=\"form\" onSubmit={handleSubmit(submit)} noValidate>\n\n             <div>\n                <TextField id=\"outlined-basic\" label=\"New list name\" type=\"text\" {...register(\"listName\", {\n                    required: { value: true, message: \"Missing list name\" }\n                })} />\n                <span>{formState.errors?.listName?.message}</span>\n                <br/>\n                <br/>\n\n                <Button color=\"info\" type=\"submit\">Add</Button>\n                </div>\n            </form>\n\n        </div>\n    );\n}\n\nexport default AddList;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAGhD,SAASC,OAAO,GAAgB;EAAA;EAAA;EAE5B,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGV,OAAO,EAAa;EAClE,MAAMW,QAAQ,GAAGV,WAAW,EAAE;EAE9B,eAAeW,MAAM,CAACC,IAAe,EAAE;IACnC,IAAI;MACA,MAAMC,SAAS,GAAG,MAAMZ,YAAY,CAACa,OAAO,CAACF,IAAI,CAAC;MAClDG,KAAK,CAAC,kBAAkB,GAAGF,SAAS,CAACG,QAAQ,CAAC;MAC9CN,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,CACD,OAAOO,GAAQ,EAAE;MACbF,KAAK,CAACE,GAAG,CAACC,OAAO,CAAC;IACtB;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBAEpB,QAAC,UAAU;MAAC,SAAS,EAAC,MAAM;MAAC,OAAO,EAAE,MAAIR,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAA,uBAAC,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAAa,eAGtF;MAAM,SAAS,EAAC,MAAM;MAAC,QAAQ,EAAEF,YAAY,CAACG,MAAM,CAAE;MAAC,UAAU;MAAA,uBAEhE;QAAA,wBACG,QAAC,SAAS;UAAC,EAAE,EAAC,gBAAgB;UAAC,KAAK,EAAC,eAAe;UAAC,IAAI,EAAC,MAAM;UAAA,GAAKJ,QAAQ,CAAC,UAAU,EAAE;YACtFY,QAAQ,EAAE;cAAEC,KAAK,EAAE,IAAI;cAAEF,OAAO,EAAE;YAAoB;UAC1D,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAI,eACN;UAAA,+BAAOT,SAAS,CAACY,MAAM,+EAAhB,kBAAkBL,QAAQ,0DAA1B,sBAA4BE;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eAClD;UAAA;UAAA;UAAA;QAAA,QAAK,eACL;UAAA;UAAA;UAAA;QAAA,QAAK,eAEL,QAAC,MAAM;UAAC,KAAK,EAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA;IACzC;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QAEL;AAEd;AAAC,GAtCQZ,OAAO;EAAA,QAEkCP,OAAO,EACpCC,WAAW;AAAA;AAAA,KAHvBM,OAAO;AAwChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}