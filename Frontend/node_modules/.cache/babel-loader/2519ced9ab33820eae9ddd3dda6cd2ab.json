{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../Utils/Config\";\nclass TasksService {\n  // Get all lists: \n  async getAllTasks() {\n    const response = await axios.get(config.tasksUrl);\n    return response.data;\n  }\n\n  // Get all lists: \n  async deleteTasks(ta) {\n    const response = await axios.delete(config.deletetasksUrl);\n    return response.data;\n  }\n  // // Get all targets: \n  // public async getAllTargets(): Promise<TargetModel[]> {\n  //     const response = await axios.get<TargetModel[]>(config.targetsUrl);\n  //     return response.data;\n  // }\n\n  // // Get gifts by target id: \n  // public async getGiftsByTarget(targetId: number): Promise<GiftModel[]> {\n  //     const response = await axios.get<GiftModel[]>(config.giftsByTargetUrl + targetId);\n  //     return response.data;\n  // }\n\n  // // Add gift: \n  // public async addGift(gift: GiftModel): Promise<GiftModel> {\n  //     const response = await axios.post<GiftModel>(config.giftsUrl, gift);\n  //     return response.data;\n  // }\n}\n\nconst tasksService = new TasksService();\nexport default tasksService;","map":{"version":3,"names":["axios","config","TasksService","getAllTasks","response","get","tasksUrl","data","deleteTasks","ta","delete","deletetasksUrl","tasksService"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Services/task-service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport TaskModel from \"../Models/TaskModel\";\r\nimport config from \"../Utils/Config\";\r\n\r\nclass TasksService {\r\n\r\n    // Get all lists: \r\n    public async getAllTasks(): Promise<TaskModel[]> {\r\n        const response = await axios.get<TaskModel[]>(config.tasksUrl);\r\n        return response.data;\r\n    }\r\n\r\n    // Get all lists: \r\n    public async deleteTasks(ta): Promise<TaskModel> {\r\n        const response = await axios.delete<TaskModel>(config.deletetasksUrl);\r\n        return response.data;\r\n    }\r\n    // // Get all targets: \r\n    // public async getAllTargets(): Promise<TargetModel[]> {\r\n    //     const response = await axios.get<TargetModel[]>(config.targetsUrl);\r\n    //     return response.data;\r\n    // }\r\n\r\n    // // Get gifts by target id: \r\n    // public async getGiftsByTarget(targetId: number): Promise<GiftModel[]> {\r\n    //     const response = await axios.get<GiftModel[]>(config.giftsByTargetUrl + targetId);\r\n    //     return response.data;\r\n    // }\r\n\r\n    // // Add gift: \r\n    // public async addGift(gift: GiftModel): Promise<GiftModel> {\r\n    //     const response = await axios.post<GiftModel>(config.giftsUrl, gift);\r\n    //     return response.data;\r\n    // }\r\n}\r\n\r\nconst tasksService = new TasksService()\r\nexport default tasksService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,YAAY,CAAC;EAEf;EACA,MAAaC,WAAW,GAAyB;IAC7C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAcJ,MAAM,CAACK,QAAQ,CAAC;IAC9D,OAAOF,QAAQ,CAACG,IAAI;EACxB;;EAEA;EACA,MAAaC,WAAW,CAACC,EAAE,EAAsB;IAC7C,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACU,MAAM,CAAYT,MAAM,CAACU,cAAc,CAAC;IACrE,OAAOP,QAAQ,CAACG,IAAI;EACxB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;AACJ;;AAEA,MAAMK,YAAY,GAAG,IAAIV,YAAY,EAAE;AACvC,eAAeU,YAAY"},"metadata":{},"sourceType":"module"}