{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\FrontEnd\\\\src\\\\Components\\\\TasksArea\\\\tasks\\\\tasks.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport listsService from \"../../../Services/list-service\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./tasks.css\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const tasks = useSelector(state => state.tasksState.tasks);\n  const {\n    listId,\n    listName\n  } = useParams();\n  const navigate = useNavigate();\n  const [checked, setChecked] = useState(false);\n  const [perc, setPerc] = useState(Number);\n  useEffect(() => {\n    tasksService.getTasksByList(listId).catch(err => alert(err.message));\n    console.log(\"useEffect\");\n  }, []);\n\n  // useEffect(() => {\n  //     let count = 0\n  //     for (let i = 0; i < tasks.length; i++) {\n  //         if (tasks[i].done === true) {\n  //             count++\n  //         }\n  //     }\n  //     let percent = count / tasks.length\n  //     setPerc(percent)\n\n  //     console.log(percent)\n  // }, [checked]);\n\n  // const handleCheckbox = async (t: TaskModel) => {\n  //     console.log(`1` + checked)\n  //     setChecked(!checked);\n  //     console.log(`2` + !checked)\n\n  //     try {\n  //         t.done = !checked\n  //         await taskService.editTask(t, t._id)\n\n  //     }\n  //     catch (err: any) {\n  //         alert(err.message);\n  //     }\n\n  // };\n\n  const navigateTolists = () => {\n    navigate('/home');\n  };\n  const navigateToAddTask = () => {\n    navigate(`/add-task/${listId}`);\n  };\n  const navigateToEditTask = id => {\n    console.log(\"taskid\");\n    console.log(id);\n    navigate(`/edit-task/${id}`);\n  };\n  const deleteTask = id => {\n    console.log(id);\n    tasksService.deleteTasks(id);\n    console.log(\"id1\");\n  };\n  const deleteList = () => {\n    const confirmDelete = window.confirm(\"Are you sure?\");\n    if (!confirmDelete) return;\n    listsService.deleteList(listId);\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"Back\",\n      onClick: navigateTolists,\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"DelList\",\n      onClick: deleteList,\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      color: \"info\",\n      children: listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), tasks.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        color: \"info\",\n        children: t.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"info\",\n        onClick: () => navigateToEditTask(t._id),\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"info\",\n        onClick: () => deleteTask(t._id),\n        children: [\" \", /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, t._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Add\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"secondary\",\n        onClick: navigateToAddTask,\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(Tasks, \"BokFKiaMCGOAmY9Y3DniTc7YoDQ=\", false, function () {\n  return [useSelector, useParams, useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useEffect","useState","useSelector","useNavigate","useParams","listsService","tasksService","DeleteIcon","EditIcon","IconButton","AddCircleIcon","ArrowBackIcon","Tasks","tasks","state","tasksState","listId","listName","navigate","checked","setChecked","perc","setPerc","Number","getTasksByList","catch","err","alert","message","console","log","navigateTolists","navigateToAddTask","navigateToEditTask","id","deleteTask","deleteTasks","deleteList","confirmDelete","window","confirm","map","t","description","_id"],"sources":["C:/Users/Neta/Documents/full stack/The list/FrontEnd/src/Components/TasksArea/tasks/tasks.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport { RootState } from \"../../../Redux/Store\";\nimport listsService from \"../../../Services/list-service\";\nimport taskService from \"../../../Services/task-service\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./tasks.css\";\n\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport Checkbox from '@mui/material/Checkbox';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nfunction Tasks(): JSX.Element {\n\n    const tasks = useSelector<RootState, TaskModel[]>(state => state.tasksState.tasks)\n    const { listId, listName } = useParams()\n\n    const navigate = useNavigate();\n\n    const [checked, setChecked] = useState(false);\n\n    const [perc, setPerc] = useState(Number)\n\n\n\n\n    useEffect(() => {\n        tasksService\n            .getTasksByList(listId)\n            .catch(err => alert(err.message));\n        console.log(\"useEffect\")\n    }, []);\n\n    // useEffect(() => {\n    //     let count = 0\n    //     for (let i = 0; i < tasks.length; i++) {\n    //         if (tasks[i].done === true) {\n    //             count++\n    //         }\n    //     }\n    //     let percent = count / tasks.length\n    //     setPerc(percent)\n\n    //     console.log(percent)\n    // }, [checked]);\n\n    // const handleCheckbox = async (t: TaskModel) => {\n    //     console.log(`1` + checked)\n    //     setChecked(!checked);\n    //     console.log(`2` + !checked)\n\n    //     try {\n    //         t.done = !checked\n    //         await taskService.editTask(t, t._id)\n\n    //     }\n    //     catch (err: any) {\n    //         alert(err.message);\n    //     }\n\n    // };\n\n\n\n    const navigateTolists = () => {\n        navigate('/home');\n    };\n\n    const navigateToAddTask = () => {\n        navigate(`/add-task/${listId}`);\n    };\n\n    const navigateToEditTask = (id: string) => {\n        console.log(\"taskid\")\n        console.log(id)\n        navigate(`/edit-task/${id}`);\n    };\n\n    const deleteTask = (id: string) => {\n        console.log(id)\n        tasksService.deleteTasks(id)\n        console.log(\"id1\")\n    }\n\n    const deleteList = () => {\n        const confirmDelete = window.confirm(\"Are you sure?\");\n        if (!confirmDelete) return;\n        listsService.deleteList(listId)\n        navigate('/home')\n    }\n\n\n\n\n    return (\n        <div className=\"Tasks\">\n\n            <IconButton className=\"Back\" onClick={navigateTolists}><ArrowBackIcon /></IconButton>\n\n            <IconButton className=\"DelList\" onClick={deleteList}><DeleteIcon fontSize=\"small\" /></IconButton>\n\n            <br />\n            <br />\n\n            <h3 color=\"info\">{listName}</h3>\n\n            {tasks.map(t =>\n                <div className=\"TaskLine\" key={t._id}>\n                    <br />\n                    {/* <input type=\"checkbox\" className=\"Checkbox\" checked={checked} onChange={() => handleCheckbox(t)} /> */}\n                    <p color=\"info\">{t.description}</p>\n                    <IconButton color=\"info\" onClick={() => navigateToEditTask(t._id)}><EditIcon fontSize=\"small\" /></IconButton>\n                    <IconButton color=\"info\" onClick={() => deleteTask(t._id)}> <DeleteIcon fontSize=\"small\" /></IconButton>\n                </div>\n            )}\n\n            <div className=\"Add\">\n                <IconButton\n                    color=\"secondary\"\n                    onClick={navigateToAddTask}><AddCircleIcon /></IconButton>\n            </div>\n        </div>\n    );\n}\n\nexport default Tasks;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}