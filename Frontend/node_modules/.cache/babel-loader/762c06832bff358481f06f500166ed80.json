{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { tasksReducer } from \"./TaskState\";\n\n// Creating reducers object from all our reducers: \n// const reducers = combineReducers({ productsState: productsReducer, employeesState: employeesReducer, customersState: customersReducer });\nconst reducers = combineReducers({\n  tasksState: tasksReducer\n});\n\n// The most important Redux object: \nconst store = configureStore({\n  reducer: reducers\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","tasksReducer","reducers","tasksState","store","reducer"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Redux/Store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers, createStore, Store } from \"redux\";\r\nimport { tasksReducer } from \"./TaskState\";\r\n\r\n\r\n// Creating reducers object from all our reducers: \r\n// const reducers = combineReducers({ productsState: productsReducer, employeesState: employeesReducer, customersState: customersReducer });\r\nconst reducers = combineReducers({ tasksState: tasksReducer });\r\n\r\n// The most important Redux object: \r\nconst store = configureStore({ reducer: reducers });\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAA4B,OAAO;AAC3D,SAASC,YAAY,QAAQ,aAAa;;AAG1C;AACA;AACA,MAAMC,QAAQ,GAAGF,eAAe,CAAC;EAAEG,UAAU,EAAEF;AAAa,CAAC,CAAC;;AAE9D;AACA,MAAMG,KAAK,GAAGL,cAAc,CAAC;EAAEM,OAAO,EAAEH;AAAS,CAAC,CAAC;AAInD,eAAeE,KAAK"},"metadata":{},"sourceType":"module"}