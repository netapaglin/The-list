{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\FrontEnd\\\\src\\\\Components\\\\AddArea\\\\addTask\\\\addTask.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport taskService from \"../../../Services/task-service\";\nimport \"./addTask.css\";\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTask() {\n  _s();\n  var _formState$errors, _formState$errors$des;\n  const {\n    listId\n  } = useParams();\n  const {\n    listName\n  } = useParams();\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const navigate = useNavigate();\n  async function submit(task) {\n    try {\n      console.log(\"task\");\n      console.log(task);\n      console.log(\"listId \" + listId);\n      console.log(\"listName \" + listName);\n      await taskService.addTask(task, listId);\n      navigate(`/tasks/${listId}/${listName}`);\n      // navigate(-1)\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addTask\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"Back\",\n      onClick: () => navigate(-1),\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(submit),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        color: \"info\",\n        id: \"outlined-basic\",\n        label: \"Write new task\",\n        type: \"text\",\n        ...register(\"description\", {\n          required: {\n            value: true,\n            message: \"Missing task\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$des = _formState$errors.description) === null || _formState$errors$des === void 0 ? void 0 : _formState$errors$des.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"info\",\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(AddTask, \"gIRRPAgihEG3V4dDCKjC8JhJXPA=\", false, function () {\n  return [useParams, useParams, useForm, useNavigate];\n});\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useForm","useNavigate","useParams","taskService","Button","IconButton","ArrowBackIcon","TextField","AddTask","listId","listName","register","handleSubmit","formState","navigate","submit","task","console","log","addTask","err","alert","message","required","value","errors","description"],"sources":["C:/Users/Neta/Documents/full stack/The list/FrontEnd/src/Components/AddArea/addTask/addTask.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport taskService from \"../../../Services/task-service\";\nimport \"./addTask.css\";\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextField from '@mui/material/TextField';\n\nfunction AddTask(): JSX.Element {\n\n    const { listId } = useParams()\n    const { listName } = useParams()\n    const { register, handleSubmit, formState } = useForm<TaskModel>();\n    const navigate = useNavigate();\n\n    async function submit(task: TaskModel) {\n        try {\n            console.log(\"task\")\n            console.log(task)\n            console.log(\"listId \" +listId )\n            console.log(\"listName \" + listName )\n            await taskService.addTask(task,listId )\n            navigate(`/tasks/${listId}/${listName}`)\n            // navigate(-1)\n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n    }\n\n    return (\n        <div className=\"addTask\">\n\n         <IconButton className=\"Back\" onClick={()=>navigate(-1)}><ArrowBackIcon /></IconButton>\n                       \n            <form className=\"form\" onSubmit={handleSubmit(submit)} noValidate>\n\n                <TextField color=\"info\" id=\"outlined-basic\" label=\"Write new task\" type=\"text\" {...register(\"description\", {\n                    required: { value: true, message: \"Missing task\" }\n                })} />\n                <br/>\n                <span>{formState.errors?.description?.message}</span>\n                <br/>\n                <br/>\n                <Button color=\"info\" type=\"submit\">Add</Button>\n\n            </form>\n\n\n        </div>\n    );\n}\n\nexport default AddTask;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAEzD,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,SAASC,OAAO,GAAgB;EAAA;EAAA;EAE5B,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,EAAE;EAC9B,MAAM;IAAEQ;EAAS,CAAC,GAAGR,SAAS,EAAE;EAChC,MAAM;IAAES,QAAQ;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGb,OAAO,EAAa;EAClE,MAAMc,QAAQ,GAAGb,WAAW,EAAE;EAE9B,eAAec,MAAM,CAACC,IAAe,EAAE;IACnC,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAET,MAAM,CAAE;MAC/BQ,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGR,QAAQ,CAAE;MACpC,MAAMP,WAAW,CAACgB,OAAO,CAACH,IAAI,EAACP,MAAM,CAAE;MACvCK,QAAQ,CAAE,UAASL,MAAO,IAAGC,QAAS,EAAC,CAAC;MACxC;IACJ,CAAC,CACD,OAAOU,GAAQ,EAAE;MACbC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IACtB;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBAEvB,QAAC,UAAU;MAAC,SAAS,EAAC,MAAM;MAAC,OAAO,EAAE,MAAIR,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAA,uBAAC,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAAa,eAEnF;MAAM,SAAS,EAAC,MAAM;MAAC,QAAQ,EAAEF,YAAY,CAACG,MAAM,CAAE;MAAC,UAAU;MAAA,wBAE7D,QAAC,SAAS;QAAC,KAAK,EAAC,MAAM;QAAC,EAAE,EAAC,gBAAgB;QAAC,KAAK,EAAC,gBAAgB;QAAC,IAAI,EAAC,MAAM;QAAA,GAAKJ,QAAQ,CAAC,aAAa,EAAE;UACvGY,QAAQ,EAAE;YAAEC,KAAK,EAAE,IAAI;YAAEF,OAAO,EAAE;UAAe;QACrD,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAI,eACN;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA,+BAAOT,SAAS,CAACY,MAAM,+EAAhB,kBAAkBC,WAAW,0DAA7B,sBAA+BJ;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrD;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA;QAAA;QAAA;MAAA,QAAK,eACL,QAAC,MAAM;QAAC,KAAK,EAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QAE5C;EAAA;IAAA;IAAA;IAAA;EAAA,QAGL;AAEd;AAAC,GA3CQd,OAAO;EAAA,QAEON,SAAS,EACPA,SAAS,EACgBF,OAAO,EACpCC,WAAW;AAAA;AAAA,KALvBO,OAAO;AA6ChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}