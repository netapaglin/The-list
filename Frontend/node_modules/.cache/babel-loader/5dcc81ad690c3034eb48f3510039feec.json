{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\Frontend\\\\src\\\\Components\\\\TasksArea\\\\tasks\\\\tasks.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport listsService from \"../../../Services/list-service\";\nimport taskService from \"../../../Services/task-service\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./tasks.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const tasks = useSelector(state => state.tasksState.tasks);\n  const {\n    listId\n  } = useParams();\n  const {\n    listName\n  } = useParams();\n  const navigate = useNavigate();\n  const [checked, setChecked] = useState(false);\n  useEffect(() => {\n    let count = 0;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].done === true) {\n        count++;\n      }\n    }\n    let percent = count / tasks.length;\n    setPerc(percent);\n    console.log(percent);\n  }, []);\n  useEffect(() => {\n    tasksService.getTasksByList(listId).catch(err => alert(err.message));\n  }, []);\n  const handleCheckbox = async t => {\n    console.log(`1` + checked);\n    setChecked(!checked);\n    console.log(`2` + !checked);\n    try {\n      t.done = !checked;\n      await taskService.editTask(t, t._id);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const navigateTolists = () => {\n    navigate('/home');\n  };\n  const navigateToAddTask = () => {\n    navigate(`/add-task/${listId}`);\n  };\n  const navigateToEditTask = id => {\n    console.log(\"taskid\");\n    console.log(id);\n    navigate(`/edit-task/${id}`);\n  };\n  const deleteTask = id => {\n    console.log(id);\n    tasksService.deleteTasks(id);\n    console.log(\"id1\");\n  };\n  const deleteList = () => {\n    const confirmDelete = window.confirm(\"Are you sure?\");\n    if (!confirmDelete) return;\n    listsService.deleteList(listId);\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteList,\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: navigateTolists,\n      children: \"back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), tasks.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: () => handleCheckbox(t)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigateToEditTask(t._id),\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(t._id),\n        children: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, t._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: navigateToAddTask,\n      children: \"add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(Tasks, \"ZwLNaxDydJiB8IjS+AbrSfY0CNo=\", false, function () {\n  return [useSelector, useParams, useParams, useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useEffect","useState","useSelector","useNavigate","useParams","listsService","taskService","tasksService","Tasks","tasks","state","tasksState","listId","listName","navigate","checked","setChecked","count","i","length","done","percent","setPerc","console","log","getTasksByList","catch","err","alert","message","handleCheckbox","t","editTask","_id","navigateTolists","navigateToAddTask","navigateToEditTask","id","deleteTask","deleteTasks","deleteList","confirmDelete","window","confirm","map","description"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Components/TasksArea/tasks/tasks.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport { RootState } from \"../../../Redux/Store\";\nimport listsService from \"../../../Services/list-service\";\nimport taskService from \"../../../Services/task-service\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./tasks.css\";\n\n\nfunction Tasks(): JSX.Element {\n\n    const tasks = useSelector<RootState, TaskModel[]>(state => state.tasksState.tasks)\n    const { listId } = useParams()\n    const { listName } = useParams()\n    const navigate = useNavigate();\n\n    const [checked, setChecked] = useState(false);\n\n\n\n    useEffect(() => {\n       let count = 0\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].done === true) {\n                count++\n            }\n        }\n        let percent = count / tasks.length\n        setPerc(percent)\n        \n        console.log(percent)\n    }, []);\n\n\n    useEffect(() => {\n        tasksService\n            .getTasksByList(listId)\n            .catch(err => alert(err.message));\n    }, []);\n\n    const handleCheckbox = async (t: TaskModel) => {\n        console.log(`1` + checked)\n        setChecked(!checked);\n        console.log(`2` + !checked)\n\n        try {\n            t.done = !checked\n            await taskService.editTask(t, t._id)\n\n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n\n    };\n\n\n\n    const navigateTolists = () => {\n        navigate('/home');\n    };\n\n    const navigateToAddTask = () => {\n        navigate(`/add-task/${listId}`);\n    };\n\n    const navigateToEditTask = (id: string) => {\n        console.log(\"taskid\")\n        console.log(id)\n        navigate(`/edit-task/${id}`);\n    };\n\n    const deleteTask = (id: string) => {\n        console.log(id)\n        tasksService.deleteTasks(id)\n        console.log(\"id1\")\n    }\n\n    const deleteList = () => {\n        const confirmDelete = window.confirm(\"Are you sure?\");\n        if (!confirmDelete) return;\n        listsService.deleteList(listId)\n        navigate('/home')\n    }\n\n\n\n\n    return (\n        <div className=\"tasks\">\n            <button onClick={deleteList}>delete</button>\n            <p>{listName}</p>\n\n            <button onClick={navigateTolists}>back</button>\n            {tasks.map(t =>\n                <div key={t._id}>\n                    <br />\n                    <br />\n                    <input type=\"checkbox\" checked={checked} onChange={() => handleCheckbox(t)} />\n                    <p>{t.description}</p>\n                    <button onClick={() => navigateToEditTask(t._id)}>edit</button>\n                    <button onClick={() => deleteTask(t._id)}>del</button>\n                </div>\n            )}\n            <button onClick={navigateToAddTask}>add task</button>\n        </div>\n    );\n}\n\nexport default Tasks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}