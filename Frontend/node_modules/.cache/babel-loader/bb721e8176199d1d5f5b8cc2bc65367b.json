{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neta\\\\Documents\\\\full stack\\\\The list\\\\Frontend\\\\src\\\\Components\\\\TasksArea\\\\tasks\\\\tasks.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport listsService from \"../../../Services/list-service\";\nimport taskService from \"../../../Services/task-service\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./tasks.css\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const tasks = useSelector(state => state.tasksState.tasks);\n  const {\n    listId,\n    listName\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [perc, setPerc] = useState(Number);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"location.state.listId   \" + location.state.listId);\n    console.log(\"location.state.listName  \" + location.state.listName);\n    if (location.state.listId) tasksService.getTasksByList(location.state.listId).catch(err => alert(err.message));\n  }, [location]);\n  useEffect(() => {\n    let count = 0;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].done === true) {\n        count++;\n      }\n    }\n    let percent = count / tasks.length;\n    setPerc(percent);\n    console.log(percent);\n  }, [tasks]);\n  const handleCheckbox = async t => {\n    // console.log(`1` + checked)\n    //  checked[t._id] = !checked[t._id]\n    // setChecked({ ...checked });\n    // console.log(`2` + !checked)\n\n    try {\n      await taskService.editTask({\n        ...t,\n        done: !t.done\n      }, t._id, dispatch);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const navigateTolists = () => {\n    navigate('/home');\n  };\n  const navigateToAddTask = () => {\n    navigate(`/add-task/${location.state.listId}/${listName}`);\n  };\n  const navigateToEditTask = t => {\n    console.log(\"taskid\");\n    console.log(t._id);\n    navigate(`/edit-task/${t._id}`, {\n      state: {\n        listId: t._id,\n        listName: t.listName\n      }\n    });\n    // navigate(`/edit-task/${t._id}`);\n  };\n\n  const deleteTask = id => {\n    console.log(id);\n    tasksService.deleteTasks(id);\n    console.log(\"id1\");\n  };\n  const deleteList = () => {\n    const confirmDelete = window.confirm(\"Are you sure?\");\n    if (!confirmDelete) return;\n    listsService.deleteList(location.state.listId);\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tasks\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"Back\",\n      onClick: navigateTolists,\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"DelList\",\n      onClick: deleteList,\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      color: \"info\",\n      children: location.state.listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: percent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), tasks.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"Checkbox\",\n        checked: t.done,\n        onChange: () => handleCheckbox(t)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        color: \"info\",\n        children: t.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"info\",\n        onClick: () => navigateToEditTask(t),\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"info\",\n        onClick: () => deleteTask(t._id),\n        children: [\" \", /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, t._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Add\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"secondary\",\n        onClick: navigateToAddTask,\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(Tasks, \"GiyVFkwJ2+BB3AB5p7NIUBbP8Tc=\", false, function () {\n  return [useSelector, useParams, useNavigate, useLocation, useDispatch];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useEffect","useState","useSelector","useLocation","useNavigate","useParams","listsService","taskService","tasksService","DeleteIcon","EditIcon","IconButton","AddCircleIcon","ArrowBackIcon","useDispatch","Tasks","tasks","state","tasksState","listId","listName","navigate","location","perc","setPerc","Number","dispatch","console","log","getTasksByList","catch","err","alert","message","count","i","length","done","percent","handleCheckbox","t","editTask","_id","navigateTolists","navigateToAddTask","navigateToEditTask","deleteTask","id","deleteTasks","deleteList","confirmDelete","window","confirm","map","description"],"sources":["C:/Users/Neta/Documents/full stack/The list/Frontend/src/Components/TasksArea/tasks/tasks.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport TaskModel from \"../../../Models/TaskModel\";\nimport { RootState } from \"../../../Redux/Store\";\nimport listsService from \"../../../Services/list-service\";\nimport taskService from \"../../../Services/task-service\";\nimport tasksService from \"../../../Services/task-service\";\nimport \"./tasks.css\";\n\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport Checkbox from '@mui/material/Checkbox';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useDispatch } from \"react-redux\";\n\nfunction Tasks(): JSX.Element {\n\n    const tasks = useSelector<RootState, TaskModel[]>(state => state.tasksState.tasks)\n    const { listId, listName } = useParams()\n    const navigate = useNavigate();\n    const location = useLocation()\n\n    const [perc, setPerc] = useState(Number)\n\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        console.log(\"location.state.listId   \" + location.state.listId )\n        console.log(\"location.state.listName  \" + location.state.listName )\n        if (location.state.listId)\n            tasksService\n                .getTasksByList(location.state.listId)\n                .catch(err => alert(err.message));\n\n    }, [location]);\n\n    useEffect(() => {\n        let count = 0\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].done === true) {\n                count++\n            }\n        }\n        let percent = count / tasks.length\n        setPerc(percent)\n\n        console.log(percent)\n    }, [tasks]);\n\n    const handleCheckbox = async (t: TaskModel) => {\n        // console.log(`1` + checked)\n        //  checked[t._id] = !checked[t._id]\n        // setChecked({ ...checked });\n        // console.log(`2` + !checked)\n\n        try {\n\n            await taskService.editTask({ ...t, done: !t.done }, t._id, dispatch)\n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n\n    };\n\n\n\n    const navigateTolists = () => {\n        navigate('/home');\n    };\n\n    const navigateToAddTask = () => {\n        navigate(`/add-task/${location.state.listId}/${listName}`);\n    };\n\n    const navigateToEditTask = ( t: TaskModel) => {\n        console.log(\"taskid\")\n        console.log(t._id)\n        navigate(`/edit-task/${t._id}`, { state: { listId: t._id, listName: t.listName } });\n        // navigate(`/edit-task/${t._id}`);\n    };\n\n    const deleteTask = (id: string) => {\n        console.log(id)\n        tasksService.deleteTasks(id)\n        console.log(\"id1\")\n    }\n\n    const deleteList = () => {\n        const confirmDelete = window.confirm(\"Are you sure?\");\n        if (!confirmDelete) return;\n        listsService.deleteList(location.state.listId)\n        navigate('/home')\n    }\n\n\n\n\n    return (\n        <div className=\"Tasks\">\n\n            <IconButton className=\"Back\" onClick={navigateTolists}><ArrowBackIcon /></IconButton>\n\n            <IconButton className=\"DelList\" onClick={deleteList}><DeleteIcon fontSize=\"small\" /></IconButton>\n\n            <br />\n            <br />\n\n            <h3 color=\"info\">{location.state.listName}</h3>\n            <p>{percent}</p>\n\n            {tasks.map(t =>\n                <div className=\"TaskLine\" key={t._id}>\n                    <br />\n                    <input type=\"checkbox\" className=\"Checkbox\" checked={t.done} onChange={() => handleCheckbox(t)} />\n                    <p color=\"info\">{t.description}</p>\n                    <IconButton color=\"info\" onClick={() => navigateToEditTask(t)}><EditIcon fontSize=\"small\" /></IconButton>\n                    <IconButton color=\"info\" onClick={() => deleteTask(t._id)}> <DeleteIcon fontSize=\"small\" /></IconButton>\n                </div>\n            )}\n\n            <div className=\"Add\">\n                <IconButton\n                    color=\"secondary\"\n                    onClick={navigateToAddTask}><AddCircleIcon /></IconButton>\n            </div>\n        </div>\n    );\n}\n\nexport default Tasks;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}